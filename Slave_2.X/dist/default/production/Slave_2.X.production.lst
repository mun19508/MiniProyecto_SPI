

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 01:21:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.31
    17                           ; Generated 13/10/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0013                     _SSPBUF	set	19
   286  0014                     _SSPCON	set	20
   287  000C                     _PIR1bits	set	12
   288  0008                     _PORTD	set	8
   289  0006                     _PORTB	set	6
   290  000B                     _INTCONbits	set	11
   291  0063                     _SSPIF	set	99
   292  0094                     _SSPSTATbits	set	148
   293  0094                     _SSPSTAT	set	148
   294  0086                     _TRISBbits	set	134
   295  0088                     _TRISD	set	136
   296  0085                     _TRISAbits	set	133
   297  008C                     _PIE1bits	set	140
   298  0081                     _OPTION_REGbits	set	129
   299  0096                     _IOCBbits	set	150
   300  043B                     _TRISC3	set	1083
   301  043D                     _TRISC5	set	1085
   302  0189                     _ANSELH	set	393
   303  0188                     _ANSEL	set	392
   304                           
   305                           	psect	cinit
   306  000F                     start_initialization:	
   307                           ; #config settings
   308                           
   309  000F                     __initialization:
   310                           
   311                           ; Clear objects allocated to COMMON
   312  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   313  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   314  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   315  0012                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318  0012                     __end_of__initialization:
   319  0012  0183               	clrf	3
   320  0013  120A  118A  285B   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMMON
   323  0077                     __pbssCOMMON:
   324  0077                     _antireb_ant:
   325  0077                     	ds	1
   326  0078                     _antireb:
   327  0078                     	ds	1
   328  0079                     _toogle:
   329  0079                     	ds	1
   330                           
   331                           	psect	cstackCOMMON
   332  0070                     __pcstackCOMMON:
   333  0070                     ?_spiWrite:
   334  0070                     ??_spiWrite:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_ISR:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_main:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     spiWrite@dat:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 1 bytes @ 0x0
   348  0070                     	ds	1
   349  0071                     ??_ISR:
   350                           
   351                           ; 1 bytes @ 0x1
   352  0071                     	ds	3
   353  0074                     ?_spiInit:
   354  0074                     spiInit@sDataSample:	
   355                           ; 1 bytes @ 0x4
   356                           
   357                           
   358                           ; 1 bytes @ 0x4
   359  0074                     	ds	1
   360  0075                     spiInit@sClockIdle:
   361                           
   362                           ; 1 bytes @ 0x5
   363  0075                     	ds	1
   364  0076                     spiInit@sTransmitEdge:
   365                           
   366                           ; 1 bytes @ 0x6
   367  0076                     	ds	1
   368  0077                     ??_spiInit:
   369  0077                     ??_main:	
   370                           ; 1 bytes @ 0x7
   371                           
   372                           
   373                           	psect	cstackBANK0
   374  0020                     __pcstackBANK0:	
   375                           ; 1 bytes @ 0x7
   376                           
   377  0020                     spiInit@sType:
   378                           
   379                           ; 1 bytes @ 0x0
   380  0020                     	ds	1
   381                           
   382                           	psect	maintext
   383  005B                     __pmaintext:	
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 55 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : B00/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0
   406 ;;      Totals:         0       0       0       0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels required when called:    3
   409 ;; This function calls:
   410 ;;		_spiInit
   411 ;; This function is called by:
   412 ;;		Startup code after reset
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           
   417                           ;psect for function _main
   418  005B                     _main:
   419  005B                     l798:	
   420                           ;incstack = 0
   421                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   422                           
   423                           
   424                           ;main.c: 57: }
   425  005B  178B               	bsf	11,7	;volatile
   426  005C  170B               	bsf	11,6	;volatile
   427  005D  158B               	bsf	11,3	;volatile
   428  005E  100B               	bcf	11,0	;volatile
   429  005F  1683               	bsf	3,5	;RP0=1, select bank1
   430  0060  1303               	bcf	3,6	;RP1=0, select bank1
   431  0061  1416               	bsf	22,0	;volatile
   432  0062  1496               	bsf	22,1	;volatile
   433  0063  1281               	bcf	1,5	;volatile
   434  0064                     l800:
   435  0064  1683               	bsf	3,5	;RP0=1, select bank3
   436  0065  1703               	bsf	3,6	;RP1=1, select bank3
   437  0066  0188               	clrf	8	;volatile
   438  0067  0189               	clrf	9	;volatile
   439  0068                     l802:
   440  0068  178B               	bsf	11,7	;volatile
   441  0069                     l804:
   442  0069  170B               	bsf	11,6	;volatile
   443  006A                     l806:
   444  006A  1283               	bcf	3,5	;RP0=0, select bank0
   445  006B  1303               	bcf	3,6	;RP1=0, select bank0
   446  006C  118C               	bcf	12,3	;volatile
   447  006D                     l808:
   448  006D  1683               	bsf	3,5	;RP0=1, select bank1
   449  006E  1303               	bcf	3,6	;RP1=0, select bank1
   450  006F  158C               	bsf	12,3	;volatile
   451  0070                     l810:
   452  0070  1685               	bsf	5,5	;volatile
   453  0071                     l812:
   454  0071  01F4               	clrf	spiInit@sDataSample
   455  0072  01F5               	clrf	spiInit@sClockIdle
   456  0073  01F6               	clrf	spiInit@sTransmitEdge
   457  0074  3024               	movlw	36
   458  0075  120A  118A  2087  120A  118A  	fcall	_spiInit
   459  007A                     l814:
   460  007A  1683               	bsf	3,5	;RP0=1, select bank1
   461  007B  1303               	bcf	3,6	;RP1=0, select bank1
   462  007C  0188               	clrf	8	;volatile
   463  007D                     l816:
   464  007D  1406               	bsf	6,0	;volatile
   465  007E                     l818:
   466  007E  1486               	bsf	6,1	;volatile
   467  007F                     l820:
   468  007F  1283               	bcf	3,5	;RP0=0, select bank0
   469  0080  1303               	bcf	3,6	;RP1=0, select bank0
   470  0081  0186               	clrf	6	;volatile
   471  0082                     l822:
   472  0082  0188               	clrf	8	;volatile
   473  0083                     l51:
   474  0083                     l52:
   475  0083  2883               	goto	l51
   476  0084  120A  118A  280C   	ljmp	start
   477  0087                     __end_of_main:
   478                           
   479                           	psect	text1
   480  0087                     __ptext1:	
   481 ;; *************** function _spiInit *****************
   482 ;; Defined at:
   483 ;;		line 12 in file "SPI.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  sType           1    wreg     enum E1292
   486 ;;  sDataSample     1    4[COMMON] enum E1300
   487 ;;  sClockIdle      1    5[COMMON] enum E1304
   488 ;;  sTransmitEdg    1    6[COMMON] enum E1308
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  sType           1    0[BANK0 ] enum E1292
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   500 ;;      Params:         3       0       0       0       0
   501 ;;      Locals:         0       1       0       0       0
   502 ;;      Temps:          0       0       0       0       0
   503 ;;      Totals:         3       1       0       0       0
   504 ;;Total ram usage:        4 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    2
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _spiInit
   516  0087                     _spiInit:
   517                           
   518                           ;incstack = 0
   519                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   520                           ;spiInit@sType stored from wreg
   521  0087  1283               	bcf	3,5	;RP0=0, select bank0
   522  0088  1303               	bcf	3,6	;RP1=0, select bank0
   523  0089  00A0               	movwf	spiInit@sType
   524  008A                     l788:
   525                           
   526                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   527  008A  1683               	bsf	3,5	;RP0=1, select bank1
   528  008B  1303               	bcf	3,6	;RP1=0, select bank1
   529  008C  1287               	bcf	7,5	;volatile
   530                           
   531                           ;SPI.c: 15:     if(sType & 0b00000100)
   532  008D  1283               	bcf	3,5	;RP0=0, select bank0
   533  008E  1303               	bcf	3,6	;RP1=0, select bank0
   534  008F  1D20               	btfss	spiInit@sType,2
   535  0090  2892               	goto	u91
   536  0091  2893               	goto	u90
   537  0092                     u91:
   538  0092  2899               	goto	l794
   539  0093                     u90:
   540  0093                     l790:
   541                           
   542                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   543  0093  0876               	movf	spiInit@sTransmitEdge,w
   544  0094  1683               	bsf	3,5	;RP0=1, select bank1
   545  0095  1303               	bcf	3,6	;RP1=0, select bank1
   546  0096  0094               	movwf	20	;volatile
   547  0097                     l792:
   548                           
   549                           ;SPI.c: 18:         TRISC3 = 1;
   550  0097  1587               	bsf	7,3	;volatile
   551                           
   552                           ;SPI.c: 19:     }
   553  0098  289F               	goto	l70
   554  0099                     l794:
   555                           
   556                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   557  0099  0874               	movf	spiInit@sDataSample,w
   558  009A  0476               	iorwf	spiInit@sTransmitEdge,w
   559  009B  1683               	bsf	3,5	;RP0=1, select bank1
   560  009C  1303               	bcf	3,6	;RP1=0, select bank1
   561  009D  0094               	movwf	20	;volatile
   562  009E                     l796:
   563                           
   564                           ;SPI.c: 23:         TRISC3 = 0;
   565  009E  1187               	bcf	7,3	;volatile
   566  009F                     l70:	
   567                           ;SPI.c: 24:     }
   568                           
   569                           
   570                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   571  009F  1283               	bcf	3,5	;RP0=0, select bank0
   572  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   573  00A1  0820               	movf	spiInit@sType,w
   574  00A2  0475               	iorwf	spiInit@sClockIdle,w
   575  00A3  0094               	movwf	20	;volatile
   576  00A4                     l71:
   577  00A4  0008               	return
   578  00A5                     __end_of_spiInit:
   579                           
   580                           	psect	text2
   581  0016                     __ptext2:	
   582 ;; *************** function _ISR *****************
   583 ;; Defined at:
   584 ;;		line 34 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0, pclath, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0
   600 ;;      Temps:          3       0       0       0       0
   601 ;;      Totals:         3       0       0       0       0
   602 ;;Total ram usage:        3 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; Hardware stack levels required when called:    1
   605 ;; This function calls:
   606 ;;		_spiWrite
   607 ;; This function is called by:
   608 ;;		Interrupt level 1
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           
   613                           ;psect for function _ISR
   614  0016                     _ISR:
   615  0016                     i1l694:
   616                           
   617                           ;main.c: 35:     IOCBbits.IOCB1 = 1;
   618  0016  1C0B               	btfss	11,0	;volatile
   619  0017  2819               	goto	u3_21
   620  0018  281A               	goto	u3_20
   621  0019                     u3_21:
   622  0019  2845               	goto	i1l708
   623  001A                     u3_20:
   624  001A                     i1l696:
   625                           
   626                           ;main.c: 36:     OPTION_REGbits.T0CS = 0;
   627  001A  0877               	movf	_antireb_ant,w
   628  001B  00F1               	movwf	??_ISR
   629  001C  0871               	movf	??_ISR,w
   630  001D  00F8               	movwf	_antireb
   631                           
   632                           ;main.c: 37: 
   633  001E  1283               	bcf	3,5	;RP0=0, select bank0
   634  001F  1303               	bcf	3,6	;RP1=0, select bank0
   635  0020  0806               	movf	6,w	;volatile
   636  0021  00F1               	movwf	??_ISR
   637  0022  0871               	movf	??_ISR,w
   638  0023  00F7               	movwf	_antireb_ant
   639  0024                     i1l698:
   640                           
   641                           ;main.c: 38:     ANSEL = 0;
   642  0024  3003               	movlw	3
   643  0025  0577               	andwf	_antireb_ant,w
   644  0026  00F1               	movwf	??_ISR
   645  0027  3003               	movlw	3
   646  0028  0671               	xorwf	??_ISR,w
   647  0029  1D03               	btfss	3,2
   648  002A  282C               	goto	u4_21
   649  002B  282D               	goto	u4_20
   650  002C                     u4_21:
   651  002C  2844               	goto	i1l706
   652  002D                     u4_20:
   653  002D                     i1l700:
   654                           
   655                           ;main.c: 39:     ANSELH = 0;
   656  002D  3003               	movlw	3
   657  002E  0578               	andwf	_antireb,w
   658  002F  00F1               	movwf	??_ISR
   659  0030  3002               	movlw	2
   660  0031  0671               	xorwf	??_ISR,w
   661  0032  1D03               	btfss	3,2
   662  0033  2835               	goto	u5_21
   663  0034  2836               	goto	u5_20
   664  0035                     u5_21:
   665  0035  283A               	goto	i1l43
   666  0036                     u5_20:
   667  0036                     i1l702:
   668                           
   669                           ;main.c: 40: 
   670  0036  3001               	movlw	1
   671  0037  00F1               	movwf	??_ISR
   672  0038  0871               	movf	??_ISR,w
   673  0039  0788               	addwf	8,f	;volatile
   674  003A                     i1l43:	
   675                           ;main.c: 41:     INTCONbits.GIE = 1;
   676                           
   677                           
   678                           ;main.c: 42:     INTCONbits.PEIE = 1;
   679  003A  3003               	movlw	3
   680  003B  0578               	andwf	_antireb,w
   681  003C  00F1               	movwf	??_ISR
   682  003D  0371               	decf	??_ISR,w
   683  003E  1D03               	btfss	3,2
   684  003F  2841               	goto	u6_21
   685  0040  2842               	goto	u6_20
   686  0041                     u6_21:
   687  0041  2844               	goto	i1l706
   688  0042                     u6_20:
   689  0042                     i1l704:
   690                           
   691                           ;main.c: 43:     PIR1bits.SSPIF = 0;
   692  0042  3001               	movlw	1
   693  0043  0288               	subwf	8,f	;volatile
   694  0044                     i1l706:
   695                           
   696                           ;main.c: 46:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   697  0044  100B               	bcf	11,0	;volatile
   698  0045                     i1l708:
   699                           
   700                           ;main.c: 48:     TRISD = 0;
   701  0045  1283               	bcf	3,5	;RP0=0, select bank0
   702  0046  1303               	bcf	3,6	;RP1=0, select bank0
   703  0047  1D8C               	btfss	12,3	;volatile
   704  0048  284A               	goto	u7_21
   705  0049  284B               	goto	u7_20
   706  004A                     u7_21:
   707  004A  2854               	goto	i1l46
   708  004B                     u7_20:
   709  004B                     i1l710:
   710                           
   711                           ;main.c: 49:     TRISBbits.TRISB0 = 1;
   712  004B  0808               	movf	8,w	;volatile
   713  004C  120A  118A  20A5  120A  118A  	fcall	_spiWrite
   714  0051                     i1l712:
   715                           
   716                           ;main.c: 50:     TRISBbits.TRISB1 = 1;
   717  0051  1283               	bcf	3,5	;RP0=0, select bank0
   718  0052  1303               	bcf	3,6	;RP1=0, select bank0
   719  0053  118C               	bcf	12,3	;volatile
   720  0054                     i1l46:
   721  0054  0873               	movf	??_ISR+2,w
   722  0055  008A               	movwf	10
   723  0056  0E72               	swapf	??_ISR+1,w
   724  0057  0083               	movwf	3
   725  0058  0EFE               	swapf	btemp,f
   726  0059  0E7E               	swapf	btemp,w
   727  005A  0009               	retfie
   728  005B                     __end_of_ISR:
   729                           
   730                           	psect	intentry
   731  0004                     __pintentry:	
   732                           ;incstack = 0
   733                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   734                           
   735  0004                     interrupt_function:
   736  007E                     saved_w	set	btemp
   737  0004  00FE               	movwf	btemp
   738  0005  0E03               	swapf	3,w
   739  0006  00F2               	movwf	??_ISR+1
   740  0007  080A               	movf	10,w
   741  0008  00F3               	movwf	??_ISR+2
   742  0009  120A  118A  2816   	ljmp	_ISR
   743                           
   744                           	psect	text3
   745  00A5                     __ptext3:	
   746 ;; *************** function _spiWrite *****************
   747 ;; Defined at:
   748 ;;		line 34 in file "SPI.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  dat             1    wreg     unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  dat             1    0[COMMON] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         1       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0
   765 ;;      Totals:         1       0       0       0       0
   766 ;;Total ram usage:        1 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_ISR
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _spiWrite
   777  00A5                     _spiWrite:
   778                           
   779                           ;incstack = 0
   780                           ; Regs used in _spiWrite: [wreg]
   781                           ;spiWrite@dat stored from wreg
   782  00A5  00F0               	movwf	spiWrite@dat
   783  00A6                     i1l680:
   784                           
   785                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   786  00A6  0870               	movf	spiWrite@dat,w
   787  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   788  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   789  00A9  0093               	movwf	19	;volatile
   790  00AA                     i1l80:
   791  00AA  0008               	return
   792  00AB                     __end_of_spiWrite:
   793  007E                     btemp	set	126	;btemp
   794  007E                     wtemp0	set	126
   795                           
   796                           	psect	config
   797                           
   798                           ;Config register CONFIG1 @ 0x2007
   799                           ;	Oscillator Selection bits
   800                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   801                           ;	Watchdog Timer Enable bit
   802                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   803                           ;	Power-up Timer Enable bit
   804                           ;	PWRTE = OFF, PWRT disabled
   805                           ;	RE3/MCLR pin function select bit
   806                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   807                           ;	Code Protection bit
   808                           ;	CP = OFF, Program memory code protection is disabled
   809                           ;	Data Code Protection bit
   810                           ;	CPD = OFF, Data memory code protection is disabled
   811                           ;	Brown Out Reset Selection bits
   812                           ;	BOREN = OFF, BOR disabled
   813                           ;	Internal External Switchover bit
   814                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   815                           ;	Fail-Safe Clock Monitor Enabled bit
   816                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   817                           ;	Low Voltage Programming Enable bit
   818                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   819                           ;	In-Circuit Debugger Mode bit
   820                           ;	DEBUG = 0x1, unprogrammed default
   821  2007                     	org	8199
   822  2007  20D4               	dw	8404
   823                           
   824                           ;Config register CONFIG2 @ 0x2008
   825                           ;	Brown-out Reset Selection bit
   826                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   827                           ;	Flash Program Memory Self Write Enable bits
   828                           ;	WRT = OFF, Write protection off
   829  2008                     	org	8200
   830  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 01:21:19 2021

            _SSPSTATbits 0094                       l51 0083                       l52 0083  
                     l70 009F                       l71 00A4                       u90 0093  
                     u91 0092                      l800 0064                      l810 0070  
                    l802 0068                      l820 007F                      l812 0071  
                    l804 0069                      l822 0082                      l814 007A  
                    l806 006A                      l816 007D                      l808 006D  
                    l818 007E                      l790 0093                      l792 0097  
                    l794 0099                      l796 009E                      l788 008A  
                    l798 005B                      _ISR 0016                     ?_ISR 0070  
                   i1l43 003A                     i1l46 0054                     i1l80 00AA  
                   u3_20 001A                     u3_21 0019                     u4_20 002D  
                   u4_21 002C                     u5_20 0036                     u5_21 0035  
                   u6_20 0042                     u6_21 0041                     u7_20 004B  
                   u7_21 004A                     _main 005B                     btemp 007E  
                   start 000C                    ??_ISR 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l700 002D                    i1l710 004B  
                  i1l702 0036                    i1l712 0051                    i1l704 0042  
                  i1l706 0044                    i1l708 0045                    i1l680 00A6  
                  i1l694 0016                    i1l696 001A                    i1l698 0024  
                  _PORTB 0006                    _PORTD 0008                    _TRISD 0088  
                  _SSPIF 0063                    pclath 000A          __end_of_spiInit 00A5  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0087                   ??_main 0077                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   _toogle 0079                   saved_w 007E  
       __end_of_spiWrite 00AB                ??_spiInit 0077  __end_of__initialization 0012  
         __pcstackCOMMON 0070           _OPTION_REGbits 0081               __pmaintext 005B  
             __pintentry 0004                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0087                  __ptext2 0016                  __ptext3 00A5  
                _antireb 0078             __size_of_ISR 0045                  _spiInit 0087  
   end_of_initialization 0012               ??_spiWrite 0070                _TRISAbits 0085  
              _TRISBbits 0086              spiWrite@dat 0070      start_initialization 000F  
            __end_of_ISR 005B              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_spiWrite 0006                 ?_spiInit 0074  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C              _antireb_ant 0077       spiInit@sDataSample 0074  
               _PIR1bits 000C         __size_of_spiInit 001E            __size_of_main 002C  
               _spiWrite 00A5             spiInit@sType 0020        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000  
